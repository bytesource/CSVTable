h1. CSVTable

h3. A Ruby class for entering data from a CSV file into a database.

CSVTable reads a csv file from a given path storing its headers and fields.
The csv data can then be entered into a corresponding database using the CSVTable#execute method.
"Sequel":http://sequel.rubyforge.org/ is used as the ORM between CSVTable and the database.

h2. Conventions

h3. CSV File

h4. CSV Data Format

CSVTable does not deal with every csv format out there.
It is therefore required for the csv file to adhere to the following conventions: 
* Header names can be enclosed in quotes but don't need to.
* Header names can be uppercase or lowercase (will be converted to lowercase).
* Header names can consist of several words (spaces will be converted to underscores).
* Field data can be missing or being empty (""). 
* Line breaks within headers or field data are not allowed. 

h4. Table Name
* The file name has to be prefixed with the name of the database table, followed by a separator (default: @)
* The prefix can be both uppercase or lowercase.

h4. Headers
* Header names must match their corresponding column names.
* Header names can be both uppercase or lowercase.

h4. Fields
* If a String value represents an Integer, it is converted into an Integer.
* If a String value represents a Float, it is converted into a Float.
* If a value is missing at the end, it is set to nil.
* If a value is missing anywhere else, it is set to a replacement value, nil by default.


h3. Database Table

h4. Table Name
* The table name matches the (lowercase) prefix of the csv file name.

h4. Column Names
* Column names match the header names and are lowercase.

h4. :hash Column
* Every table required an additional column :hash of type :String.
* The :hash column ensures that the same data cannot be added twice (see also "Data Integrity" below).


h2. Data Integrity

* On object creation a SHA2 hash on the csv file's fields data is created and stored in the CSVTable instance.
* This hash value will be stored in the :hash column of every data row of a given csv file.
* Before inserting any data into the database, the hashes already stored in the database are checked against the 
hash of data to be added.
* If the hash of the data to be added is found in the database, an exception is thrown and the (duplicate) data is not inserted.


h2. Usage



h3. NOTE

This is my first attempt at programming in Ruby the code and it probably shows.
Nevertheless, I am determined to constantly improve and especially learn from the many great coders out there.
That's why I _highly_ appreciate _any_ suggestions that might help me make my code more idiomatic and robust.

